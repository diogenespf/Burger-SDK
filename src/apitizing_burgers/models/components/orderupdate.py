"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from apitizing_burgers import utils
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from typing import List, Optional


class OrderUpdateOrderStatus(str, Enum):
    r"""Status of the order"""
    CREATED = 'CREATED'
    PREPARING = 'PREPARING'
    READY = 'READY'
    DELIVERED = 'DELIVERED'
    CANCELLED = 'CANCELLED'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class OrderUpdate:
    r"""Fields to update an order"""
    burger_ids: Optional[List[int]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('burger_ids'), 'exclude': lambda f: f is None }})
    r"""List of burger ids in the order"""
    table: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('table'), 'exclude': lambda f: f is None }})
    r"""Table number for the order"""
    status: Optional[OrderUpdateOrderStatus] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status'), 'exclude': lambda f: f is None }})
    r"""Status of the order"""
    note: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('note'), 'exclude': lambda f: f is None }})
    r"""Note for the order"""
    

